<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?eclipse version="3.0"?><plugin>
                                                	
   
    
    
    
    
    <extension id="pm-categories" name="Process Mining Categories" point="org.knime.workbench.repository.categories">
                                        		
        
        
        
        
        <category icon="icon/category-processmining.png" level-id="processmining" name="Process Mining" path="/community"/>
                                        		
        
        
        
        
        <category icon="icon/category-io.png" level-id="io" name="IO" path="/community/processmining"/>
                                        		
        
        
        
        
        <category icon="icon/read.png" level-id="ioRead" name="Read" path="/community/processmining/io"/>
                                        		
        
        
        
        
        <category icon="icon/write.png" level-id="ioWrite" name="Write" path="/community/processmining/io"/>
                                        		
        
        
        
        
        <category after="io" icon="icon/category-conversion.png" level-id="conversion" name="Conversion" path="/community/processmining"/>
                                        		
        
        
        
        
        
        <!-- Manipulation-->
                                        		
        
        
        
        
        <category after="conversion" icon="icon/category-manipulation.png" level-id="manipulation" name="Manipulation" path="/community/processmining"/>
                                        		
        
        
        
        
        <!-- 
		<category level-id="log" name="Log Manipulation" path="/community/processmining/manipulation" icon="icon/category-manipulation.png" />
		<category after="log" level-id="table" name="Table Manipulation" path="/community/processmining/manipulation" icon="icon/category-manipulation.png" />
		-->
                                        		
		
        
        
        
        
        <!-- Discovery-->
                                        		
        
        
        
        
        <category after="manipulation" icon="icon/category-discovery.png" level-id="discovery" name="Discovery" path="/community/processmining"/>
                                        		
        
        
        
        
        <!-- 
		<category level-id="log" name="Log-Based Discovery" path="/community/processmining/discovery" icon="icon/category-discovery.png" />
		<category after="log" level-id="table" name="Table-Based Discovery" path="/community/processmining/discovery" icon="icon/category-discovery.png" />
		<category after="table" level-id="model" name="Model-Based Discovery" path="/community/processmining/discovery" icon="icon/category-discovery.png" />
		-->
                                        		
        
        
        
        
        <!-- conformance-->
                                        		
        
        
        
        
        <category after="discovery" icon="icon/category-conformance.png" level-id="conformance" name="Evaluation" path="/community/processmining"/>
                                        		
        
        
        
        
        <!-- 
		<category level-id="log" name="Log-Based Evaluation" path="/community/processmining/conformance" icon="icon/category-conformance.png" />
		<category after="log" level-id="table" name="Table-Based Evaluation" path="/community/processmining/conformance" icon="icon/category-conformance.png" />
		-->
                                        		
		
        
        
        
        
        <!-- visualization-->
                                        		
        
        
        
        
        <category after="conformance" icon="icon/category-visualization.png" level-id="visualization" name="Visualization" path="/community/processmining"/>
                                        	
    
    
    
    
    </extension>
                    	
    
    
    
    
    <extension point="org.knime.workbench.repository.nodes">
                                        		
        
        
        
        
        <!-- nodes in io-->
                                        		
        
        
         
        <node category-path="/community/processmining/io/ioWrite" factory-class="org.pm4knime.node.io.log.writer.xes.XESWriterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioWrite" factory-class="org.pm4knime.node.io.log.writer.mxml.MXMLWriterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioRead" factory-class="org.pm4knime.node.io.petrinet.reader.PetrinetReaderNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioWrite" factory-class="org.pm4knime.node.io.petrinet.writer.PetrinetWriterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioRead" factory-class="org.pm4knime.node.io.hybridpetrinet.reader.HybridPetrinetReaderNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioWrite" factory-class="org.pm4knime.node.io.hybridpetrinet.writer.HybridPetrinetWriterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioRead" factory-class="org.pm4knime.node.io.processtree.reader.ProcessTreeReaderNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioWrite" factory-class="org.pm4knime.node.io.processtree.writer.ProcessTreeWriterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioRead" factory-class="org.pm4knime.node.io.log.reader.XesImporter.XesImporterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/io/ioRead" factory-class="org.pm4knime.node.io.log.reader.MXMLImporter.MXMLImporterNodeFactory"/>
                                        		
        
        
        
        
        <!-- 
        <node category-path="/community/processmining/io/ioRead" factory-class="org.pm4knime.node.io.bpmn.reader.BpmnReaderNodeFactory"/>
        <node category-path="/community/processmining/io/ioWrite" factory-class="org.pm4knime.node.io.bpmn.writer.BpmnWriterNodeFactory"/>
        -->                               		
        
        
        
        
        <!-- nodes in log manipulation-->
                                        		
        
        
        
        
        <node category-path="/community/processmining/manipulation" deprecated="true" factory-class="org.pm4knime.node.logmanipulation.sample.SampleLogNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/manipulation" deprecated="true" factory-class="org.pm4knime.node.logmanipulation.merge.MergeLogNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/manipulation" deprecated="true" factory-class="org.pm4knime.node.logmanipulation.filter.FilterLogByLengthNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/manipulation" deprecated="true" factory-class="org.pm4knime.node.logmanipulation.filter.FilterByFrequencyNodeFactory"/>
                                                
        
        
        
        
        <!-- nodes in table manipulation-->
                                                
        
        
        
        
        <node category-path="/community/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.sample.knimetable.SampleLogTableNodeFactory"/>
                                                
        
        
        
        
        <node category-path="/community/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.merge.table.MergeTableNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.filter.knimetable.FilterByFrequencyTableNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.filter.knimetable.FilterByLengthTableNodeFactory"/>
                                        		
        
        
        
        
        <!-- nodes in conversion-->
                                        		
        
        
        
        
        <node category-path="/community/processmining/conversion" factory-class="org.pm4knime.node.conversion.table2log.Table2XLogConverterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conversion" factory-class="org.pm4knime.node.conversion.log2table.XLog2TableConverterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conversion" factory-class="org.pm4knime.node.conversion.pt2pn.PT2PNConverterNodeFactory"/>
        
        <node category-path="/community/processmining/conversion" factory-class="org.pm4knime.node.conversion.pn2bpmn.PN2BPMNConverterNodeFactory" />
                                        		
        
        
        
        
        <node category-path="/community/processmining/conversion" factory-class="org.pm4knime.node.conversion.pn2table.PetriNet2TableConverterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conversion" factory-class="org.pm4knime.node.conversion.table2pn.Table2PetriNetConverterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conversion" factory-class="org.pm4knime.node.conversion.hpn2table.HybridPetriNet2TableConverterNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conversion" factory-class="org.pm4knime.node.conversion.table2hpn.Table2HybridPetriNetConverterNodeFactory"/>
                                        		
		
        
        
        
        
        <!-- nodes in table-based discovery-->
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" factory-class="org.pm4knime.node.discovery.heuritsicsminer.table.HeuristicsMinerTableNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" factory-class="org.pm4knime.node.discovery.alpha.table.AlphaMinerTableNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" factory-class="org.pm4knime.node.discovery.cgminer.table.TableCGMinerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" factory-class="org.pm4knime.node.discovery.dfgminer.dfgTableMiner.DfgMinerTableNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" factory-class="org.pm4knime.node.discovery.inductiveminer.Table.InductiveMinerTableNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" factory-class="org.pm4knime.node.discovery.ilpminer.Table.ILPMinerTableNodeFactory"/>
                                                
        
        
        
        
        
        <!-- nodes in log-based discovery-->
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" deprecated="true" factory-class="org.pm4knime.node.discovery.heuritsicsminer.HeuristicsMinerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" deprecated="true" factory-class="org.pm4knime.node.discovery.ilpminer.ILPMinerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" deprecated="true" factory-class="org.pm4knime.node.discovery.alpha.xlog.AlphaMinerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" deprecated="true" factory-class="org.pm4knime.node.discovery.cgminer.CGMinerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" deprecated="true" factory-class="org.pm4knime.node.discovery.inductiveminer.InductiveMinerNodeFactory2"/>
                                        		
        
        
        
        
        
        <!-- nodes in model-based discovery-->
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" factory-class="org.pm4knime.node.discovery.hybridminer.HybridMinerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/discovery" factory-class="org.pm4knime.node.discovery.dfgminer.knimeTable.InductiveMinerDFGTableNodeFactory"/>
                                                
		
        
        
        
        
        <!-- nodes in conformance-->
                                        		
        
        
        
        
        <node category-path="/community/processmining/conformance" deprecated="true" factory-class="org.pm4knime.node.conformance.replayer.PNReplayerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conformance" deprecated="true" factory-class="org.pm4knime.node.conformance.fitness.FitnessCheckerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conformance" deprecated="true" factory-class="org.pm4knime.node.conformance.performance.PerformanceCheckerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conformance" deprecated="true" factory-class="org.pm4knime.node.conformance.precision.PrecisionCheckerNodeFactory"/>
                                        		
		
		
        
        
        
        
        <node category-path="/community/processmining/conformance" factory-class="org.pm4knime.node.conformance.replayer.table.helper.PNReplayerTableNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conformance" factory-class="org.pm4knime.node.conformance.table.fitness.FitnessCheckerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conformance" factory-class="org.pm4knime.node.conformance.table.performance.PerformanceCheckerNodeFactory"/>
                                        		
        
        
        
        
        <node category-path="/community/processmining/conformance" factory-class="org.pm4knime.node.conformance.table.precision.PrecisionCheckerNodeFactory"/>
                                        		
		    
		
        
        
        
        
        <!-- nodes visualization-->
                                        		
        
        
        
        
        <node category-path="/community/processmining/visualization" factory-class="org.pm4knime.node.visualizations.jsgraphviz.JSGraphVizPTNodeFactory"/>
                                                
        
        
        
        
        <node category-path="/community/processmining/visualization" factory-class="org.pm4knime.node.visualizations.jsgraphviz.JSGraphVizDFGNodeFactory"/>
                                                
        
        
        
        
        <node category-path="/community/processmining/visualization" factory-class="org.pm4knime.node.visualizations.jsgraphviz.JSGraphVizPNNodeFactory"/>
                                                
        
        
        
        
        <node category-path="/community/processmining/visualization" factory-class="org.pm4knime.node.visualizations.jsgraphviz.JSVisHybridPNNodeFactory"/>
                                                
        
        
        
        
        <node category-path="/community/processmining/visualization" factory-class="org.pm4knime.node.visualizations.jsgraphviz.JSVisCGNodeFactory"/>
                                                
        
        
        
        
        <node category-path="/community/processmining/visualization" factory-class="org.pm4knime.node.visualizations.logviews.tracevariant.TraceVariantVisNodeFactory"/>
                              
    
   
    </extension>
                                	
    
    
  
    
    
    
    
    
    <extension point="org.knime.core.PortType">
                                                                                		
        
        
        
        
        
        <portType hidden="false" name="Event Log" objectClass="org.pm4knime.portobject.XLogPortObject" objectSerializer="org.pm4knime.portobject.XLogPortObject$XLogPortObjectSerializer" specClass="org.pm4knime.portobject.XLogPortObjectSpec" specSerializer="org.pm4knime.portobject.XLogPortObjectSpec$XLogPortObjectSpecSerializer"/>
                                                
        
        
        
        
        
        <portType color="#3789D0" hidden="false" name="Petri Net" objectClass="org.pm4knime.portobject.PetriNetPortObject" objectSerializer="org.pm4knime.portobject.PetriNetPortObject$PetriNetPortObjectSerializer" specClass="org.pm4knime.portobject.PetriNetPortObjectSpec" specSerializer="org.pm4knime.portobject.PetriNetPortObjectSpec$PetriNetPortObjectSpecSerializer"/>
                                                
        
        
        
        
        <portType color="#7EE1DA" hidden="false" name="Causal Graph" objectClass="org.pm4knime.portobject.CausalGraphPortObject" objectSerializer="org.pm4knime.portobject.CausalGraphPortObject$CausalGraphPortObjectSerializer" specClass="org.pm4knime.portobject.CausalGraphPortObjectSpec" specSerializer="org.pm4knime.portobject.CausalGraphPortObjectSpec$CausalGraphPortObjectSpecSerializer"/>
                                                
        
        
        
        
        <portType color="#E5B941" hidden="false" name="Hybrid Petri Net" objectClass="org.pm4knime.portobject.HybridPetriNetPortObject" objectSerializer="org.pm4knime.portobject.HybridPetriNetPortObject$HybridPetriNetPortObjectSerializer" specClass="org.pm4knime.portobject.HybridPetriNetPortObjectSpec" specSerializer="org.pm4knime.portobject.HybridPetriNetPortObjectSpec$HybridPetriNetPortObjectSpecSerializer"/>
                                                
        
        
        
        
        <portType color="#C1876B" hidden="false" name="Process Tree" objectClass="org.pm4knime.portobject.ProcessTreePortObject" objectSerializer="org.pm4knime.portobject.ProcessTreePortObject$ProcessTreePortObjectSerializer" specClass="org.pm4knime.portobject.ProcessTreePortObjectSpec" specSerializer="org.pm4knime.portobject.ProcessTreePortObjectSpec$ProcessTreePortObjectSpecSerializer"/>
                                                
        
        
        
        
        <portType color="#C1876B" hidden="false" name="BPMN Model" objectClass="org.pm4knime.portobject.BpmnPortObject" objectSerializer="org.pm4knime.portobject.BpmnPortObject$BpmnPortObjectSerializer" specClass="org.pm4knime.portobject.BpmnPortObjectSpec" specSerializer="org.pm4knime.portobject.BpmnPortObjectSpec$BpmnPortObjectSpecSerializer"/>
                                                 
        
        
        
        
        
        <portType color="#E04DF0" hidden="false" name="Replay Result in Alignment" objectClass="org.pm4knime.portobject.RepResultPortObject" objectSerializer="org.pm4knime.portobject.RepResultPortObject$RepResultPortObjectSerializer" specClass="org.pm4knime.portobject.RepResultPortObjectSpec" specSerializer="org.pm4knime.portobject.RepResultPortObjectSpec$RepResultPortObjectSpecSerializer"/>
                                                                        		
        
        
        
        
        
        <portType color="#FF0000" hidden="false" name="Replay Result in Alignment" objectClass="org.pm4knime.portobject.RepResultPortObjectTable" objectSerializer="org.pm4knime.portobject.RepResultPortObjectTable$RepResultPortObjectSerializerTable" specClass="org.pm4knime.portobject.RepResultPortObjectSpecTable" specSerializer="org.pm4knime.portobject.RepResultPortObjectSpecTable$RepResultPortObjectSpecSerializerTable"/>
                                                
        
        
        
        
        
        <portType hidden="false" name="Directly Follows Model" objectClass="org.pm4knime.portobject.DFMPortObject" objectSerializer="org.pm4knime.portobject.DFMPortObject$DFMPortObjectSerializer" specClass="org.pm4knime.portobject.DFMPortObjectSpec" specSerializer="org.pm4knime.portobject.DFMPortObjectSpec$DFMPortObjectSpecSerializer"/>
                                           
        
        
        
        
        
        <portType color="#C5F04D" hidden="false" name="Directly Follows Msd" objectClass="org.pm4knime.portobject.DfgMsdPortObject" objectSerializer="org.pm4knime.portobject.DfgMsdPortObject$DfgMsdPortObjectSerializer" specClass="org.pm4knime.portobject.DfgMsdPortObjectSpec" specSerializer="org.pm4knime.portobject.DfgMsdPortObjectSpec$DfgMsdPortObjectSpecSerializer"/>
                                         
    
    
    
    
    
    
    </extension>
                        
    
    
    
    
    
    <extension point="org.knime.js.core.javascriptComponents">
                                                                                        
        
        
        
        
        
        
        
        
        
        <javascriptComponent getComponentValue-method-name="getComponentValue" implementationBundleID="org.pm4knime.node.visualizations.jsgraphviz.component.bundle" init-method-name="init" javascriptComponentID="org.pm4knime.node.visualizations.jsgraphviz.component" name="Java Script GraphViz Visualizer" namespace="jsgraphviz">
         </javascriptComponent>
                                                                           
        
        
        
        
        
        <javascriptComponent getComponentValue-method-name="getComponentValue" implementationBundleID="org.pm4knime.node.visualizations.logviews.tracevariant.component.bundle" init-method-name="init" javascriptComponentID="org.pm4knime.node.visualizations.logviews.tracevariant.component" name="Trace Variant Explorer" namespace="varExplorer">
         </javascriptComponent>
                                                 
    
    
    
    
    
    
    
    
    
    </extension>
                                            
    
    
    
    
    
    
    
    
    
    <extension point="org.knime.js.core.webResources">
                                                                                    	
        
        
        
        
        
        
        
        
        
        <webResourceBundle debug="true" name="Java Script GraphViz Visualizer" usesDefine="false" version="1.0.0" webResourceBundleID="org.pm4knime.node.visualizations.jsgraphviz.component.bundle">
                                                                                                                                    
            
            
            
            
            
            
            
            
            
            <webResource relativePathSource="js-libs/" relativePathTarget="js-libs/">
       		</webResource>
                                                                                                                               		
            
            
            
            
            
            
            
            
            
            <importResource relativePath="js-libs/form.js" type="JAVASCRIPT"/>
                                                                                                
            
            
            
            
            
            
            <importResource relativePath="js-libs/form.css" type="CSS"/>
                                                                                                
            
            
            
            <webDependency webResourceBundleID="bootstrap_3.3.6"> </webDependency>   
            <webDependency webResourceBundleID="Viz"> </webDependency>
                                                                                                                                    
            
            
            
            
            
            
            
            
            
            <webDependency webResourceBundleID="RequireJS_2.3.3"> </webDependency>
                                                                                                                                
        
        
        
        
        
        
        
        
        
        </webResourceBundle>
                                                
        
        
        
        
        
        
        
        <webResourceBundle debug="true" name="Java Script GraphViz Visualizer" usesDefine="false" version="1.0.0" webResourceBundleID="org.pm4knime.node.visualizations.logviews.tracevariant.component.bundle">
                                                                         
            
            
            
            
            <webResource relativePathSource="js-libs/" relativePathTarget="js-libs/">
       		</webResource>
                                                                   		
            
            
            
            
            <webDependency webResourceBundleID="Viz"> </webDependency>
                                                                   		
            
            
            
            
            <webDependency webResourceBundleID="RequireJS_2.3.3"> </webDependency>
                                                                   		
            
            
            
            
            <importResource relativePath="js-libs/dom-to-image.min.js" type="JAVASCRIPT"/>
                                                                        
            
            
            
            
            <importResource relativePath="js-libs/variantExplorer.js" type="JAVASCRIPT"/>
                                                                        
            
            
            
            
            <importResource relativePath="js-libs/variantExplorer.css" type="CSS"/>
            <webDependency webResourceBundleID="bootstrap_3.3.6"> </webDependency>                                                       

    
        </webResourceBundle>
                                                                                        
        
        
        
        
        
        
        
        
        
        <webResourceBundle debug="true" name="Graphviz JS" usesDefine="false" version="2.1.2" webResourceBundleID="Viz">
                                                                                                                                   
            
            
            
            
            
            
            <webResource relativePathSource="js-libs/" relativePathTarget="js-libs/"> </webResource>
                                                                       
            
            <importResource relativePath="js-libs/dagre.min.js" type="JAVASCRIPT"> </importResource>
            <importResource relativePath="js-libs/dagre-d3.min.js" type="JAVASCRIPT"> </importResource>
            <importResource relativePath="js-libs/d3.min.js" type="JAVASCRIPT"> </importResource>
            <importResource relativePath="js-libs/smil.user.min.js" type="JAVASCRIPT"> </importResource>
		    <importResource relativePath="js-libs/jquery.js" type="JAVASCRIPT"> </importResource>
		    <importResource relativePath="js-libs/lodash.js" type="JAVASCRIPT"> </importResource>
		    <importResource relativePath="js-libs/backbone.js" type="JAVASCRIPT"> </importResource>
		    
		    <importResource relativePath="js-libs/joint.min.js" type="JAVASCRIPT"> </importResource>
            <importResource relativePath="js-libs/joint.min.css" type="CSS"/>
            
            <importResource relativePath="js-libs/diagram-js.css" type="CSS"/>
            <importResource relativePath="js-libs/bpmn-embedded.css" type="CSS"/>
            <importResource relativePath="js-libs/bpmn-modeler.development.js" type="JAVASCRIPT"> </importResource>           
            <importResource relativePath="js-libs/bpmn-layouter.js" type="JAVASCRIPT"> </importResource> 
            
            <importResource relativePath="js-libs/fontawesome.js" type="JAVASCRIPT"> </importResource>
            <importResource relativePath="js-libs/solid.js" type="JAVASCRIPT"> </importResource>
 
            <importResource relativePath="js-libs/viz.js" type="JAVASCRIPT"> </importResource>
            
                                                               
   
            
            
            
            
            <importResource relativePath="js-libs/full.render.js" type="JAVASCRIPT"> </importResource>
                                                                                            
        
        
        
        
        
        
        </webResourceBundle>
                                                                                                
    
    
    
    
    
    
    
    
    
    
    </extension>
                        
    
    
    
    
    <extension point="org.knime.core.DataType">
                                               
        
        
        
        
        <DataType cellClass="org.pm4knime.node.conversion.pn2table.PetriNetCell" factoryClass="org.pm4knime.node.conversion.pn2table.PetriNetCellFactory">
                                                                     
            
            
            
            
            <serializer cellClass="org.pm4knime.node.conversion.pn2table.PetriNetCell" serializerClass="org.pm4knime.node.conversion.pn2table.PetriNetCell$PetriNetSerializer">
         </serializer>
                                                                     
            
            
            
            
            <ValueFactory deprecated="false" valueFactoryClass="org.pm4knime.node.conversion.pn2table.PetriNetCellFactory">
         </ValueFactory>
                                                                  
      
        
        
        
        
        </DataType>
                                              
        
        
        
        
        <DataType cellClass="org.pm4knime.node.conversion.hpn2table.HybridPetriNetCell" factoryClass="org.pm4knime.node.conversion.hpn2table.HybridPetriNetCellFactory">
                                                                     
            
            
            
            
            <serializer cellClass="org.pm4knime.node.conversion.hpn2table.HybridPetriNetCell" serializerClass="org.pm4knime.node.conversion.hpn2table.HybridPetriNetCell$HybridPetriNetSerializer">
         </serializer>
                                                                     
            
            
            
            
            <ValueFactory deprecated="false" valueFactoryClass="org.pm4knime.node.conversion.hpn2table.HybridPetriNetCellFactory">
         </ValueFactory>
                                                                  
      
        
        
        
        
        </DataType>
                                            
    
    
    
    
    </extension>
                        
    
    
    
    
    
    <extension point="org.knime.python3.types.PythonValueFactory">
                                              
                
        <Module moduleName="utils.petri_net_type" modulePath="python">
                                                                                            
            
            <PythonValueFactory PythonClassName="PetriNetPythonFactory" ValueFactory="org.pm4knime.node.conversion.pn2table.PetriNetCellFactory" ValueTypeName="utils.petri_net_type.PetriNetPythonCell">
         </PythonValueFactory>
                                                        
                                          
        </Module>
     
    </extension>
                                                        










</plugin>
