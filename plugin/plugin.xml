<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?eclipse version="3.0"?><plugin>
 <extension point="org.knime.workbench.repository.categories">
      <category level-id="processmining" name="Process Mining" path="/"/>
	<category level-id="io" name="IO" path="/processmining"/>
	<category level-id="manipulation" name="Manipulation" path="/processmining"/>
	<category level-id="conversion" name="Conversion" path="/processmining"/>
	
	<category level-id="discovery" name="Discovery" path="/processmining"/>
	<category level-id="conformance" name="Conformance" path="/processmining"/>

   </extension>
   
   <extension point="org.knime.workbench.repository.nodes">
     
     <!-- nodes in io-->
	<node
       category-path="/processmining/io"
       factory-class="org.pm4knime.node.io.log.reader.XLogReaderNodeFactory"
       id="org.pm4knime.node.io.log.reader.XLogReaderNodeFactory"/>
        <node category-path="/processmining/io" factory-class="org.pm4knime.node.io.log.writer.XLogWriterNodeFactory" id="org.pm4kinme.node.io.log.writer.XLogWriterNodeFactory"/>
       <node category-path="/processmining/io" factory-class="org.pm4knime.node.io.petrinet.reader.PetrinetReaderNodeFactory"/>  
      <node category-path="/processmining/io" factory-class="org.pm4knime.node.io.petrinet.writer.PetrinetWriterNodeFactory" id="org.pm4knime.ding.io.PetrinetWriterNodeFactory"/>  
     
      <node category-path="/processmining/io" factory-class="org.pm4knime.node.io.processtree.reader.ProcessTreeReaderNodeFactory" id="org.pm4knime.ding.io.processtree.reader.ProcessTreeReaderNodeFactory"/>
       <node category-path="/processmining/io" factory-class="org.pm4knime.node.io.processtree.writer.ProcessTreeWriterNodeFactory" id="org.pm4knime.ding.io.processtree.writer.ProcessTreeWriterNodeFactory"/>
       
       <!-- nodes in manipulation-->
	   <node category-path="/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.sample.SampleLogNodeFactory" id="org.pm4knime.node.logmanipulation.sample.SampleLogNodeFactory"/>
		<node category-path="/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.split2.LogSplitterNodeFactory" id="org.pm4knime.node.logmanipulation.split2.LogSplitterNodeFactory"/>
		<node category-path="/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.split.SplitLogNodeFactory" id="org.pm4knime.node.logmanipulation.SplitLogNodeFactory"/>
		<node category-path="/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.classify.RandomClassifierNodeFactory" id="org.pm4knime.node.logmanipulation.classify.RandomClassifierNodeFactory"/>
		<node category-path="/processmining/manipulation" factory-class="org.pm4knime.node.logmanipulation.merge.MergeLogNodeFactory" id="org.pm4knime.node.logmanipulation.merge.MergeLogNodeFactory"/>
	
		<!-- nodes in conversion-->
		<node category-path="/processmining/conversion" factory-class="org.pm4knime.node.conversion.table2log.Table2XLogConverterNodeFactory" id="org.pm4knime.node.conversion.table2log.Table2XLogConverterNodeFactory"/>
		<node category-path="/processmining/conversion" factory-class="org.pm4knime.node.conversion.log2table.XLog2TableConverterNodeFactory" id="org.pm4knime.node.conversion.log2table.XLog2TableConverterNodeFactory"/>

		<!-- nodes in discovery-->
       <node category-path="/processmining/discovery" factory-class="org.pm4knime.node.discovery.alpha.AlphaMinerNodeFactory" id="org.pm4kinme.node.discovery.alpha.AlphaMinerNodeFactory"/>
      <node category-path="/processmining/discovery" factory-class="org.pm4knime.node.discovery.inductiveminer.InductiveMinerNodeFactory" id="org.pm4knime.node.discovery.inductiveminer.InductiveMinerNodeFactory"/>
		<node category-path="/processmining/discovery" factory-class="org.pm4knime.node.discovery.heuritsicsminer.HeuristicsMinerNodeFactory" id="org.pm4knime.node.discovery.heuritsicsminer.HeuristicsMinerNodeFactory"/>
		<node category-path="/processmining/discovery" factory-class="org.pm4knime.node.discovery.dfgminer.DFMMinerNodeFactory" id="org.pm4knime.node.discovery.dfgminer.DFMMinerNodeFactory"/>
		<node category-path="/processmining/discovery" factory-class="org.pm4knime.node.discovery.dfgminer.DFM2PMNodeFactory" id="org.pm4knime.node.discovery.dfgminer.DFM2PMNodeFactory"/>
		<node category-path="/processmining/discovery" factory-class="org.pm4knime.node.discovery.ilpminer.ILPMinerNodeFactory" id="org.pm4knime.node.discovery.ilpminer.ILPMinerNodeFactory"/>


		<!-- nodes in conformance-->
		<node category-path="/processmining/conformance" factory-class="org.pm4knime.node.conformance.fitness.FitnessCheckerNodeFactory" id="org.pm4knime.node.conformance.fitness.FitnessCheckerNodeFactory"/>
	
	   <!-- nodes in performance-->
	  	<node category-path="/processmining/conformance" factory-class="org.pm4knime.node.conformance.performance.PerformanceCheckerNodeFactory" id="org.pm4knime.node.conformance.performance.PerformanceCheckerNodeFactory"/>
	  
	     <node category-path="/processmining/conformance" factory-class="org.pm4knime.node.conformance.precision.PrecisionCheckerNodeFactory" id="org.pm4knime.node.conformance.precision.PrecisionCheckerNodeFactory"/>
	
		<node category-path="/processmining/conformance" factory-class="org.pm4knime.node.conformance.replayer.DefaultPNReplayerNodeFactory" id="org.pm4knime.node.conformance.replayer.DefaultPNReplayerNodeFactory"/>
		<node category-path="/processmining/conformance" factory-class="org.pm4knime.node.conformance.replayer.PNReplayerNodeFactory" id="org.pm4knime.node.conformance.replayer.PNReplayerNodeFactory"/>
	</extension>

	<extension point="org.knime.core.PortType">
		<portType hidden="false" name="Event Log" objectClass="org.pm4knime.portobject.XLogPortObject" objectSerializer="org.pm4knime.portobject.XLogPortObject$XLogPortObjectSerializer" specClass="org.pm4knime.portobject.XLogPortObjectSpec" specSerializer="org.pm4knime.portobject.XLogPortObjectSpec$XLogPortObjectSpecSerializer"> </portType>
		<portType hidden="false" name="Petri Net" objectClass="org.pm4knime.portobject.PetriNetPortObject" objectSerializer="org.pm4knime.portobject.PetriNetPortObject$PetriNetPortObjectSerializer" specClass="org.pm4knime.portobject.PetriNetPortObjectSpec" specSerializer="org.pm4knime.portobject.PetriNetPortObjectSpec$PetriNetPortObjectSpecSerializer"> </portType>   
		<portType hidden="false" name="Alignment" objectClass="org.pm4knime.portobject.RepResultPortObject" objectSerializer="org.pm4knime.portobject.RepResultPortObject$RepResultPortObjectSerializer" specClass="org.pm4knime.portobject.RepResultPortObjectSpec" specSerializer="org.pm4knime.portobject.RepResultPortObjectSpec$RepResultPortObjectSpecSerializer"> </portType>
 <portType hidden="false" name="Process Tree" objectClass="org.pm4knime.portobject.ProcessTreePortObject" objectSerializer="org.pm4knime.portobject.ProcessTreePortObjectSerializer" specClass="org.pm4knime.portobject.ProcessTreePortObjectSpec" specSerializer="org.pm4knime.portobject.ProcessTreePortObjectSpecSerializer">
     	 </portType>
		  <portType hidden="false" name="Alignment" objectClass="org.pm4knime.portobject.RepResultPortObject" objectSerializer="org.pm4knime.portobject.RepResultPortObject$RepResultPortObjectSerializer" specClass="org.pm4knime.portobject.RepResultPortObjectSpec" specSerializer="org.pm4knime.portobject.RepResultPortObjectSpec$RepResultPortObjectSpecSerializer">
       </portType>
        <portType hidden="false" name="DirectlyFollowsModel" objectClass="org.pm4knime.portobject.DFMPortObject" objectSerializer="org.pm4knime.portobject.DFMPortObject$DFMPortObjectSerializer" specClass="org.pm4knime.portobject.DFMPortObjectSpec" specSerializer="org.pm4knime.portobject.DFMPortObjectSpec$DFMPortObjectSpecSerializer">
       </portType>
	</extension>
</plugin>
