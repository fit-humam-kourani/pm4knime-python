<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./PT-icon.png" type="Visualizer" deprecated="false"
	xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v2.8 http://knime.org/node/v2.8.xsd">
   
    <name>Visualize PT (GraphViz)</name>
    
    <shortDescription>
        JS GraphViz Process Tree Visualization
    </shortDescription>
    
    <fullDescription>
        <intro>
    This node implements a JavaScript Visualization of a Process Tree.
    A Process Tree is a representation of all possible traces (order of activities) of a process.
    We have four operators (seq, xor loop, xor, and) that are always inner or root nodes. 
    Leaf nodes are activities that can be silent if they have no label.
    A Process tree starts by executing the root node. Each operator behaves differently on execution:
     
     
    The "seq" operator executes its children from right to left.
    The "xor" operator executes one of its children.
    The "and" operator executes the children in parallel.
    The "xor loop" operator executes one of its children and after this child is 
    fully executed the loop operator is allowed to execute another of its children.
    This goes on until the silent leaf is chosen. After this action, the operator is considered fully executed.
    </intro>
    </fullDescription>
    
    <interactiveView name="JSGraphViz"></interactiveView>
    
   <ports>
        <inPort name="Process Tree" index="0">Input Process Tree</inPort>
	</ports>

</knimeNode>
