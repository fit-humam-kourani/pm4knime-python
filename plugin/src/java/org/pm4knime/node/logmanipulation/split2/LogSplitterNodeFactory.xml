<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./default.png" type="Manipulator" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>Split Event Log (Default)</name>
    
    <shortDescription>
        This log splitter is independent on the event log... we just give the choices , in benefit to use flowVariables
    </shortDescription>
    
    <fullDescription>
     	<!-- Will accept the values from the log spec, no plain one there. 
     	Values should be given interactively. But if only using the spec, it can't have this. 
     	We can assign the values there.  -->
        <intro>This node is used to split event log with less options than Split Event Log. 
        It can be set in flow variables and used in recursive workflow.</intro>
        
        
        <option name="Attribute key">Give the attribute key to split the log. The attributes 
        can be trace and event attributes. </option>
        <option name="Attribute value">Give the attribute value in String to split the log.</option>
       
        <!--
        <tab name="Standard Options">
            <option name="short name of first option (like in the dialog)">description of first option</option>
            <option name="short name of second option (like in the dialog)">description of second option</option>
        </tab>
        <tab name="Advanced Options">
            <option name="short name of first advanced option (like in the dialog)">description of first advanced option</option>
        </tab>
        -->
    </fullDescription>
    
    <ports>
        <inPort index="0" name="Event Log">The event log to be split</inPort>
        <!-- possibly more input ports here-->
        <outPort index="0" name="Event Log to Keep">Event Log to keep</outPort>
        <outPort index="1" name="Event Log to Dispose">Event Log to dispose</outPort>
        <!-- possibly more output ports here-->
    </ports>    
   
</knimeNode>
